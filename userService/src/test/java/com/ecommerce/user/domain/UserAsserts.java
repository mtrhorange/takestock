package com.ecommerce.user.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAllPropertiesEquals(User expected, User actual) {
        assertUserAutoGeneratedPropertiesEquals(expected, actual);
        assertUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAllUpdatablePropertiesEquals(User expected, User actual) {
        assertUserUpdatableFieldsEquals(expected, actual);
        assertUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAutoGeneratedPropertiesEquals(User expected, User actual) {
        assertThat(actual)
            .as("Verify User auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserUpdatableFieldsEquals(User expected, User actual) {
        assertThat(actual)
            .as("Verify User relevant properties")
            .satisfies(a -> assertThat(a.getLogin()).as("check login").isEqualTo(expected.getLogin()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()))
            .satisfies(a -> assertThat(a.getPasswordHash()).as("check passwordHash").isEqualTo(expected.getPasswordHash()))
            .satisfies(a -> assertThat(a.getFirstName()).as("check firstName").isEqualTo(expected.getFirstName()))
            .satisfies(a -> assertThat(a.getLastName()).as("check lastName").isEqualTo(expected.getLastName()))
            .satisfies(a -> assertThat(a.getActivated()).as("check activated").isEqualTo(expected.getActivated()))
            .satisfies(a -> assertThat(a.getLangKey()).as("check langKey").isEqualTo(expected.getLangKey()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserUpdatableRelationshipsEquals(User expected, User actual) {
        // empty method
    }
}

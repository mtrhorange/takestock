name: Build and Deploy React App to EC2

on:
  push:
    branches: [ release ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_KEY }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          cd gateway
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest

      - name: Deploy to EC2 via SSH and Docker
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          
          if [ ! -d ~/.ssh ]; then
            mkdir -p ~/.ssh
          fi

          if [ -f ~/.ssh/config ]; then
            rm ~/.ssh/config
          fi

          cat <<EOF > ~/.ssh/config
          Host *
          ServerAliveInterval 60
          ServerAliveCountMax 3
          EOF

          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.GATEWAY_HOST }} << 'EOF'

            echo "Installing Docker if not present..."
            if ! command -v docker &> /dev/null; then
              sudo yum update -y
              sudo amazon-linux-extras install docker -y
              sudo yum install -y docker
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker \$USER
            fi
          
            echo "Pulling Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest
          
            echo "Stopping old container (if exists)..."
            sudo docker stop react-app || true
            sudo docker rm react-app || true
          
            echo "Creating Docker network if it doesn't exist..."
            sudo docker network inspect my-microservice-network >/dev/null 2>&1 || \
            sudo docker network create my-microservice-network
          
            echo "Running new container..."
            sudo docker run -d --name react-app --network my-microservice-network -p 80:80 ${{ secrets.DOCKER_USERNAME }}/react-app:latest
          
            echo "Waiting a few seconds for container to start..."
            sleep 5
          
            echo "Checking container status..."
            sudo docker ps -f name=react-app
          
            echo "Checking logs..."
            sudo docker logs --tail 10 react-app
            
          EOF

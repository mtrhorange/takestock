package com.ecommerce.product.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserActivityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserActivityAllPropertiesEquals(UserActivity expected, UserActivity actual) {
        assertUserActivityAutoGeneratedPropertiesEquals(expected, actual);
        assertUserActivityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserActivityAllUpdatablePropertiesEquals(UserActivity expected, UserActivity actual) {
        assertUserActivityUpdatableFieldsEquals(expected, actual);
        assertUserActivityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserActivityAutoGeneratedPropertiesEquals(UserActivity expected, UserActivity actual) {
        assertThat(actual)
            .as("Verify UserActivity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserActivityUpdatableFieldsEquals(UserActivity expected, UserActivity actual) {
        assertThat(actual)
            .as("Verify UserActivity relevant properties")
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getProductId()).as("check productId").isEqualTo(expected.getProductId()))
            .satisfies(a -> assertThat(a.getAction()).as("check action").isEqualTo(expected.getAction()))
            .satisfies(a -> assertThat(a.getTimestamp()).as("check timestamp").isEqualTo(expected.getTimestamp()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserActivityUpdatableRelationshipsEquals(UserActivity expected, UserActivity actual) {
        // empty method
    }
}
